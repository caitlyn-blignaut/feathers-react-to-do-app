networks:
  to-do-network:
volumes:
  postgres-data:
  mongo-data:

services:
  to-do-api:
    build:
      context: to-do-api
    # container name is not necessary
    container_name: to-do-api
    # working_dir is an override of the Dockerfile value if needed
    # working_dir: /usr/src/app
    networks:
      - to-do-network
    # volumes is most useful for hot reloading
    volumes:
      - ./to-do-api/src:/usr/src/app/src
      - ./to-do-api/config:/usr/src/app/config
      - ./to-do-api/migrations:/usr/src/app/migrations
    # tty: true
    ports:
      - "3030:3030"
    # only specify command if you need to change it from what is in the Dockerfile
    # command: npm run dev
    depends_on:
      - postgres
      - mongodb

  integration-api:
    build:
      context: integration-api
    # container name is not necessary
    container_name: integration-api
    # working_dir is an override of the Dockerfile value if needed
    # working_dir: /usr/src/app
    networks:
      - to-do-network
    # volumes is most useful for hot reloading
    volumes:
      - ./integration-api/src:/usr/src/app/src
      - ./integration-api/config:/usr/src/app/config
    # tty: true
    ports:
      - "3031:3031"
    # only specify command if you need to change it from what is in the Dockerfile
    # command: npm run dev
    depends_on:
      - to-do-api

  front-end:
    build:
      context: to-do-portal
    container_name: front-end
    # working_dir: /usr/src/app
    networks:
      - to-do-network
    volumes:
      - ./to-do-portal/src:/usr/src/app/src
    # tty: true
    # stdin_open: true
    ports:
      - "8080:8080"
    # command: npm run dev
    environment:
      - CHOKIDAR_USEPOLLING=true
      - MONGO_URI=mongodb://user:password@mongodb:27017/to-do-api?authSource=admin
    depends_on:
      - integration-api

  postgres:
    # image: postgres
    build:
      context: postgres
    container_name: postgres
    restart: always
    # tty: true
    # we need a volume but we don't need it to persist on local
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./postgres/docker-entrypoint-initdb.d/setup.sh:/docker-entrypoint-initdb.d/initdb.sh
    environment:
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    networks:
      - to-do-network

  mongodb:
    # image: mongo
    build:
      context: mongodb
      args:
        - NPM_VERSION=${NPM_VERSION}
        - NODE_VERSION=${NODE_VERSION}
    volumes:
      - mongo-data:/data/db
    networks:
      - to-do-network
    ports:
      - 9876:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=admin
      - ADMIN_DB=admin
      - MONGO_USER=user
      - MONGO_USER_PASSWORD=password
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null

  # nginx:
  #   build:
  #     context: nginx
  #   container_name: nginx
  #   restart: always
  #   tty: true
  #   ports:
  #     - "8000:80"
  #   networks:
  #     - node-network
  #   depends_on:
  #      - back-end
  #      - front-end
